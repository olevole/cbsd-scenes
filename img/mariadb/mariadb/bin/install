#!/bin/sh
#v10.0.6
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="mypw hosts network"
MYDESC="rtorrent image helper"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${system}
. ${color}
init $*

BACKTITLE="--backtitle \Z1${0}\Zn --colors"
DIALOG=${DIALOG=/usr/bin/dialog}
SKELDIR="${jailsysdir}/${jname}/skel"
PRODUCT="mariadb"

install_img()
{
	mount -t devfs devfs ${path}/dev

chroot ${path} /bin/sh << EOF
/root/skel/mysql ${mypw} ${hosts} ${network}
rm -rf /root/skel
EOF

	${ECHO} "${MAGENTA}${PRODUCT} installed. After jail start, default installation${NORMAL}"
	umount ${path}/dev
	rm -rf ${path}/usr/local/etc/pkg/repos
	cbsd jcleanup jname=${jname}
	umount ${path}
	echo
	exit 0
}

myconf()
{
	tempfile=$( mktemp ${ftmpdir}/xconf.XXXX )
	trap "rm -f ${tempfile}" 0 1 2 3

	returncode=0
	while test $returncode != 1 && test $returncode != 250; do
	    exec 3>&1
	    value=$( $DIALOG ${BACKTITLE} --ok-label "Install" --title "${PRODUCT} jail install" --form "${PRODUCT} configuration" 0 0 3 \
	    "MySQL root password (eg: sUpErMeGaPaSs):" 1 1 "" 1 45 30 30 \
	    "Hosts (allowed connection from, % - any):" 2 1 "localhost" 2 45 30 30 \
	    "TCP/IP binding? (0 - unix.socket only)" 3 1 "0" 3 45 3 3 2>&1 1>&3 \
	    )

	    returncode=$?
	    exec 3>&-

	    case ${returncode} in
		0)
		    I=0
		    for a in ${value}; do
			case $I in
			    0)
				mypw="${a}"
				;;
			    1)
				hosts="${a}"
				;;
			    2)
				network="${a}"
				;;
			esac
			I=$(( I + 1 ))
		    done
		    if [ -z "${mypw}" -o -z "${hosts}" -o -z "${network}" ]; then
			echo "Please fill all inputs"
			read p
			returncode=5
		    else
			install_img
		    fi
		    ;;
		*)
		    cbsd jcleanup jname=${jname}
		    umount ${path}
		    exit 0
	    esac
	done
}


### MAIN
. ${etcdir}/buildworld.conf
. ${workdir}/universe.subr
. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
[ ${jid} -ne 0 ] && err 1 "${MAGENTA}Error: jail is active${NORMAL}"

init_target_arch
init_basedir

[ $baserw -eq 1 ] && path=$data
[ ! -d "${path}" ] && mkdir -p ${path}

if ! is_mounted "${path}"; then
    mountbase
fi

mountfstab

# auto install by arg
[ -n "${mypw}" -a -n "${hosts}" -a -n "${network}" ] && install_img
# wizard
myconf

cbsd jcleanup jname=${jname}
umount ${path}
